scalar Date

enum BilanzPosition {
 	Aktiv
	Aufwand
	CPD
	Ertrag
	Kontokorrent
	Passiv
}

enum Ertragsart {
	Dividende
	Zins
}

enum KontoArt {
	Konto
	Depot
}

input Buchung {
    datum: Date!,
	empfaenger: String,
	verwendung: String,
	umsaetze: [Umsatz]!
}

input Einlieferung {
	datum: Date!,
	depot: String!,
	asset: String!,
	valuta: Date!,
	menge: Float!,
	betrag: Float,
}

input Ertrag {
    datum: Date!,
	depot: String!,
	konto: String!,
	asset: String!,
	valuta: Date!,
	menge: Float!,
	betrag: Float!,
	ertragsart: Ertragsart!,
	kest: Float,
	soli: Float
}

input Kauf {
    datum: Date!,
	depot: String!,
	konto: String!,
	asset: String!,
	valuta: Date!,
	menge: Float!,
	betrag: Float!,
	provision: Float,
	stueckzins: Float
}

input KontoInput {
	name: String!,
	art: KontoArt!,
	waehrung: String!,
	bilanzPosition: BilanzPosition!,
	saldo: Float,
	datum: Date
}

input Tilgung {
    datum: Date!,
	depot: String!,
	konto: String!,
	asset: String!,
	valuta: Date!,
	menge: Float!,
	betrag: Float,
	kest: Float,
	soli: Float
}
	
input Umsatz {
	konto: String!,
	valuta: Date!,
	betrag: Float!
}

input Verkauf {
    datum: Date!,
	depot: String!,
	konto: String!,
	asset: String!,
	valuta: Date!,
	menge: Float!,
	betrag: Float!,
	provision: Float,
	kest: Float,
	soli: Float
}

# The Root Mutation for the application
type Mutation {
	neuesKonto(input: KontoInput!) : ID!
	buche(buchung: Buchung!) : ID!
	liefereEin(einlieferung: Einlieferung!): ID!
    kaufe(kauf: Kauf!) : ID!
    bucheErtrag(ertrag: Ertrag!) : ID!
    verkaufe(verkauf: Verkauf!) : ID!
    tilge(tilgung: Tilgung!) : ID!
}


type Konto {
	name: String!,
	art: KontoArt!,
	waehrung: String,
	bilanzPosition: BilanzPosition!,
	saldo: Float!,
	datum: Date!
}

# The Root Query for the application
type Query {
	findKontoByName(kontoName: String): Konto!
    buchungen(konto: String): [String]!
}

